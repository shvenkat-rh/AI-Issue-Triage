name: Claude Issue Analysis CI

on:
  issues:
    types: [opened, edited]

jobs:
  analyze-issue:
    runs-on: ubuntu-latest
    
    permissions:
      issues: write
      contents: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Set up environment variables
      run: |
        echo "ANTHROPIC_VERTEX_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" >> $GITHUB_ENV
        echo "CLAUDE_CODE_USE_VERTEX=1" >> $GITHUB_ENV
        echo "CLOUD_ML_REGION=us-east5" >> $GITHUB_ENV
    
    - name: Generate codebase summary (if needed)
      run: |
        # This assumes you have repomix or similar tool to generate codebase summary
        # You might want to cache this or generate it differently
        if [ ! -f "repomix-output.txt" ]; then
          echo "Generating codebase summary..."
          # Example: npx repomix --output repomix-output.txt
          # Or create a simple summary of key files
          find . -name "*.py" -not -path "./.git/*" -not -path "./venv/*" | head -20 | xargs cat > repomix-output.txt
        fi
    
    - name: Analyze Issue
      run: |
        python claude_cli.py \
          --title "${{ github.event.issue.title }}" \
          --description "${{ github.event.issue.body }}" \
          --format json \
          --output analysis.json \
          --quiet
    
    - name: Parse Analysis Results
      id: parse
      run: |
        # Extract key information from the analysis
        ISSUE_TYPE=$(jq -r '.issue_type' analysis.json)
        SEVERITY=$(jq -r '.severity' analysis.json)
        CONFIDENCE=$(jq -r '.confidence_score' analysis.json)
        SUMMARY=$(jq -r '.analysis_summary' analysis.json)
        
        echo "issue_type=$ISSUE_TYPE" >> $GITHUB_OUTPUT
        echo "severity=$SEVERITY" >> $GITHUB_OUTPUT
        echo "confidence=$CONFIDENCE" >> $GITHUB_OUTPUT
        echo "summary<<EOF" >> $GITHUB_OUTPUT
        echo "$SUMMARY" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Format Analysis for Comment
      id: format
      run: |
        cat << 'EOF' > comment.md
        ## ðŸ¤– Claude AI Analysis
        
        **Classification:** `${{ steps.parse.outputs.issue_type }}` | **Severity:** `${{ steps.parse.outputs.severity }}` | **Confidence:** `${{ steps.parse.outputs.confidence }}`
        
        ### Summary
        ${{ steps.parse.outputs.summary }}
        
        ### Detailed Analysis
        <details>
        <summary>Click to expand full analysis</summary>
        
        ```json
        EOF
        cat analysis.json >> comment.md
        echo '```' >> comment.md
        echo '</details>' >> comment.md
        echo '' >> comment.md
        echo '_Analysis generated by Claude AI via Vertex AI_' >> comment.md
    
    - name: Comment on Issue
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const comment = fs.readFileSync('comment.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Add Labels Based on Analysis
      uses: actions/github-script@v6
      with:
        script: |
          const issueType = '${{ steps.parse.outputs.issue_type }}';
          const severity = '${{ steps.parse.outputs.severity }}';
          
          const labels = [`ai-analyzed`, `type:${issueType}`, `severity:${severity}`];
          
          github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: labels
          });
    
    - name: Upload Analysis Artifact
      uses: actions/upload-artifact@v3
      with:
        name: claude-analysis-${{ github.run_id }}
        path: analysis.json
        retention-days: 30

